#!/bin/bash

# Custom Cookie Consent pre-commit hook
# This hook will run PHPCS and PHPUnit on all PHP files to be committed

# Get list of PHP files that are staged for commit
STAGED_PHP_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php$")

# If no PHP files are staged, exit early
if [ -z "$STAGED_PHP_FILES" ]; then
    echo "No PHP files staged for commit. Skipping pre-commit hook."
    exit 0
fi

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-commit checks on staged PHP files...${NC}"

# Verify composer dependencies are installed
if [ ! -d "vendor" ]; then
    echo -e "${RED}Composer dependencies not found. Running composer install...${NC}"
    composer install --no-interaction
    if [ $? -ne 0 ]; then
        echo -e "${RED}Composer install failed. Please fix and try again.${NC}"
        exit 1
    fi
fi

# Run PHP CodeSniffer on staged files
echo -e "${YELLOW}Running PHP CodeSniffer...${NC}"
echo "$STAGED_PHP_FILES" | xargs vendor/bin/phpcs --standard=WordPress

# Store the exit code
PHPCS_EXIT_CODE=$?

if [ $PHPCS_EXIT_CODE -ne 0 ]; then
    echo -e "${RED}PHP CodeSniffer found issues.${NC}"
    echo -e "${YELLOW}Would you like to automatically fix fixable issues? (y/n)${NC}"
    read -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Running PHP Code Beautifier and Fixer...${NC}"
        echo "$STAGED_PHP_FILES" | xargs vendor/bin/phpcbf --standard=WordPress
        echo -e "${YELLOW}Re-staging fixed files...${NC}"
        echo "$STAGED_PHP_FILES" | xargs git add
    else
        echo -e "${RED}Please fix the issues and try again. You can run 'composer run phpcbf' to auto-fix many issues.${NC}"
        exit 1
    fi
fi

# Run PHPUnit tests
echo -e "${YELLOW}Running PHPUnit tests...${NC}"
vendor/bin/phpunit --testdox --stop-on-failure

# Store the exit code
PHPUNIT_EXIT_CODE=$?

if [ $PHPUNIT_EXIT_CODE -ne 0 ]; then
    echo -e "${RED}PHPUnit tests failed. Please fix the issues before committing.${NC}"
    exit 1
fi

# If we got here, all checks passed
echo -e "${GREEN}All pre-commit checks passed!${NC}"
exit 0 