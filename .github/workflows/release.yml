name: Release Plugin

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          extensions: mbstring, zip
          tools: composer

      - name: Build plugin zip
        run: |
          # Remove unnecessary files
          rm -rf .git .github .gitignore

          # Optionally install any required dependencies
          # composer install --no-dev --optimize-autoloader

          # Go up one directory to create a properly named zip
          cd ..
          zip -r custom-cookie-consent.zip custom-cookie-consent -x "custom-cookie-consent/.git/*" "custom-cookie-consent/.github/*" "custom-cookie-consent/.gitignore"
          ls -la custom-cookie-consent.zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ../custom-cookie-consent.zip
          asset_name: custom-cookie-consent.zip
          asset_content_type: application/zip

      - name: Update plugin.json
        run: |
          # Get the version from the release tag
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}  # Remove 'v' prefix if present

          # Update the version in plugin.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" plugin.json

          # Update the last_updated field
          CURRENT_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          sed -i "s/\"last_updated\": \".*\"/\"last_updated\": \"$CURRENT_DATE\"/" plugin.json

          # Commit the changes back to the repository
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add plugin.json
          git commit -m "Update plugin.json for version $VERSION"
          git push
